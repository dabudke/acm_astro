---
import { getCollection } from "astro:content";
import Layout from "$layouts/Layout.astro";
import BlogTag from "./_Tag.astro";
import Profile from "$components/Profile.astro";
import { render } from "astro:content";
import { Image } from "astro:assets";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { post: post.id },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await render(post);

const authorProfile = post?.data.authorProfile;
---

<Layout title={post!.data.title}>
  {
    post!.data.image && (
      <div class="grid place-items-center w-full max-md:h-80 h-[40vh] overflow-clip">
        <Image
          src={post!.data.image}
          alt={post!.data.title}
          class="object-cover object-bottom min-h-full min-w-full"
        />
      </div>
    )
  }
  <header class="ml-8 lg:ml-32 mb-8 mt-8">
    <h1 class="mt-2 text-3xl text-red">{post!.data.title}</h1>
    <p class="text-lg my-1 font-display uppercase">
      {post!.data.date.toLocaleDateString("en-US", { timeZone: "UTC" })} &bull; BY {post!.data.author}
    </p>
    <span>
      {post!.data.tags.map((tag: string) => <BlogTag tag={tag} />)}
    </span>
  </header>
  <article class="mb-8 max-lg:md:ml-20 lg:ml-48 mx-8 prose !prose-invert prose-neutral prose-p:indent-8 prose-li:marker:text-neutral-400">
    <Content />
  </article>
  {
    authorProfile && (
      <aside class="ml-12 lg:ml-24 mb-8 max-w-4xl">
        <h2 class="text-2xl mb-2">About the Author</h2>
        <Profile
          name={post?.data.author}
          image={authorProfile.photo}
          email={authorProfile.email}
          website={authorProfile.website}
          github={authorProfile.github}
          linkedin={authorProfile.linkedin}
          bio={authorProfile.bio}
          classOf={authorProfile.class}
        />
      </aside>
    )
  }
</Layout>
